// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  roleId   Int
  role     Role      @relation(fields: [roleId], references: [id])
  bookings Booking[]
}

model Role {
  id       Int    @id @default(autoincrement())
  roleName String @unique
  users    User[]
}

model Car {
  id                 Int       @id @default(autoincrement())
  make               String
  model              String
  year               Int
  pricePerDay        Float
  availabilityStatus Boolean
  bookings           Booking[]
}

model Booking {
  id           Int           @id @default(autoincrement())
  userId       Int
  carId        Int
  startDate    DateTime
  endDate      DateTime
  totalCost    Float
  status       String        @default("pending")
  user         User          @relation(fields: [userId], references: [id])
  car          Car           @relation(fields: [carId], references: [id])
  transactions Transaction[]
}

model Transaction {
  id            Int      @id @default(autoincrement())
  bookingId     Int
  amountPaid    Float
  paymentDate   DateTime
  paymentStatus String   @default("completed")
  booking       Booking  @relation(fields: [bookingId], references: [id])
}
